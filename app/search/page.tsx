import Header from './components/Header'
import SearchSideBar from './components/SearchSideBar'
import RestaurantCard from './components/RestaurantCard'
import type { Metadata } from 'next'
import { PRICE, PrismaClient } from '@prisma/client'

export const metadata: Metadata = {
  title: 'Search Restaurants | Open Table',
  description: 'Generated by create next app',
}

interface SearchPrams {
  city?: string
  cuisine?: string
  price?: PRICE
}
const prisma = new PrismaClient()
const fetchRestaurantByCity = async (searchParams: SearchPrams) => {
  const select = {
    id: true,
    name: true,
    main_image: true,
    price: true,
    cuisine: true,
    location: true,
    slug: true,
    reviews: true,
  }
  const where: any = {}
  if (searchParams.city) {
    const location = {
      name: {
        equals: searchParams.city.toLowerCase(),
      },
    }
    where.location = location
  }
  if (searchParams.cuisine) {
    const cuisine = {
      name: {
        equals: searchParams.cuisine.toLowerCase(),
      },
    }
    where.cuisine = cuisine
  }
  if (searchParams.price) {
    const price = {
      equals: searchParams.price,
    }
    where.price = price
  }

  return await prisma.restaurant.findMany({
    where: where,
    select: select,
  })
}

const fetchLocations = async () => {
  return prisma.location.findMany()
}
const fetchCuisines = async () => {
  return prisma.cuisine.findMany()
}

export default async function Search({
  searchParams,
}: {
  searchParams: SearchPrams
}) {
  const restaurants = await fetchRestaurantByCity(searchParams)
  const locations = await fetchLocations()
  const cuisines = await fetchCuisines()

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SearchSideBar
          locations={locations}
          cuisines={cuisines}
          searchParams={searchParams}
        />
        <div className="w-5/6 ">
          {restaurants.length ? (
            <>
              {restaurants.map((restaurant) => (
                <RestaurantCard key={restaurant.id} restaurant={restaurant} />
              ))}
            </>
          ) : (
            <p>Sorry we found no restaurants around</p>
          )}
        </div>
      </div>
    </>
  )
}
